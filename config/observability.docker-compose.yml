version: '3.8'

services:
  # Loki for log storage
  loki:
    image: grafana/loki:2.9.0
    container_name: ape-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - ape-observability
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: ape-promtail
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-positions:/tmp
    command: -config.file=/etc/promtail/config.yml
    networks:
      - ape-observability
    restart: unless-stopped
    depends_on:
      - loki
    labels:
      - "logging=promtail"

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: ape-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ape-observability
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: ape-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - ape-observability
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: ape-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - ape-observability
    restart: unless-stopped
    labels:
      - "logging=promtail"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: ape-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=ape-admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_ALERTING_ENABLED=true
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_ALERTING_EXECUTE_ALERTS=true
      - GF_LOG_LEVEL=info
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./grafana-alerting.yml:/etc/grafana/provisioning/alerting/alerting.yml:ro
      - ./dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    networks:
      - ape-observability
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
    labels:
      - "logging=promtail"

volumes:
  loki-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  promtail-positions:
    driver: local

networks:
  ape-observability:
    driver: bridge
    name: ape-observability